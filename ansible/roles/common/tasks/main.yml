---
- name: Install APT packages
  apt:
    pkg:
    - apt-transport-https
    - autoconf
    - automake
    - bilibop-lockfs
    - build-essential
    - bsdmainutils
    - ca-certificates
    - curl
    - dosfstools
    - expect
    - git
    - gnupg2
    - grub-efi-amd64
    - grub-efi-amd64-bin
    - grub-efi-ia32-bin
    - grub-pc
    - grub-pc-bin
    - grub2-common
    - libconfig-dev
    - libtool
    - man-db
    - opensc
    - opensc-pkcs11
    - pkg-config
    - software-properties-common
    - sudo
    - yubico-piv-tool
    - yubikey-manager
    - zsh
    - zsh-autosuggestions
    - zsh-syntax-highlighting

- apt_repository:
    repo: deb http://ftp.debian.org/debian/ stable main contrib non-free
    state: present

# Latest firmware blobs for modern hardware support / laptops
- name: Install backports APT packages
  apt:
    update_cache: yes
    pkg:
    - firmware-linux
    - firmware-linux-nonfree
    - firmware-misc-nonfree

- name: Create user
  block:
  - user:
      name: "{{ user }}"
      shell: /bin/bash
      groups: sudo,operator
      createhome: true
      append: yes
  - file:
      path: "/home/{{ user }}/"
      state: directory
      recurse: yes
      owner: "{{ user }}"
      group: "{{ user }}"
  - file:
      path: "/home/{{ user }}/.local/bin"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: "0755"
  - name: Delete user account passwd
    shell: "passwd --delete {{ user }}"
  - name: Enabling password-less sudo for operators group
    lineinfile:
      dest: /etc/sudoers
      state: present
      line: '%operator ALL=(ALL) NOPASSWD: ALL'
  - file:
      path: "/home/{{ user }}/.bash_profile"
      state: touch
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: "0755"
  - blockinfile:
      dest: "/home/{{ user }}/.bash_profile"
      state: present
      block: |
        clear
        export PATH="/home/{{ user }}/.local/bin:$PATH"
        export GPG_TTY=$(tty)
        alias bigfont="setfont /usr/share/consolefonts/Lat2-Terminus28x14.psf.gz"
        alias ls="ls --color=auto"
        alias grep="grep --color=auto"
        alias ll="ls -alhF"
        PS1='${debian_chroot:+($debian_chroot)}\[\033[32m\]\u\[\033[00m\]@\[\033[01;32m\]\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ ';;

- name: Fancy Z-shell
  block:
  - blockinfile:
      dest: "/home/{{ user }}/.zshrc"
      create: yes
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: "0644"
      state: present
      block: |
        source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
        source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
        export PATH="/home/{{ user }}/.local/bin:/usr/sbin:$PATH"
        export GPG_TTY=$(tty)
        alias bigfont="setfont /usr/share/consolefonts/Lat2-Terminus28x14.psf.gz"
        alias ls="ls --color=auto"
        alias grep="grep --color=auto"
        alias ll="ls -alFh"
        PS1='%F{magenta}%n%F{cyan}@%f%B%F{green}%m%f%b%F{white}:%f%F{blue}%B%~%b%f%F{white}%f$ '
        if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
            export TERM="xterm-256color"
        fi
        HISTFILE=~/.zsh_history
        HISTSIZE=10000
        SAVEHIST=10000
        setopt appendhistory
  - shell: chsh -s $(which zsh) {{ user }}

- name: Automatic Local Login
  block:
  - file:
      path: /etc/systemd/system/getty@tty1.service.d
      state: directory
      owner: root
      group: root
      mode: "0755"
  - template:
      src: autologin.conf
      dest: /etc/systemd/system/getty@tty1.service.d/autologin.conf
      owner: root
      group: root
      mode: "0644"
  - systemd: name=getty@tty1 enabled=yes masked=no

- name: Auto Mount SD Cards
  block:
    - template:
        src: udev-sdcard-automount.rules
        dest: /etc/udev/rules.d/70-udev-sdcard-automount.rules
    - file:
        path: /etc/systemd/system/systemd-udevd.service.d/
        state: directory
        owner: root
        group: root
        mode: "0755"
    - name: Allow systemd-udevd to mount to the system filesystem namespace
      template:
        src: shared-mount.conf
        dest: /etc/systemd/system/systemd-udevd.service.d/shared-mount.conf

- name: Install APT packages
  apt:
    update_cache: yes
    state: latest
    pkg:
    - linux-image-amd64
    - linux-headers-amd64

- name: Kernel cmdline
  block:
    - blockinfile:
        dest: /etc/default/grub
        state: present
        block: |
          GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX rootovl quiet splash loglevel=0 console=ttyS0,115200 earlyprintk=ttyS0,115200 nofb"
          GRUB_HIDDEN_TIMEOUT_QUIET=true
          GRUB_HIDDEN_TIMEOUT=0
          GRUB_TIMEOUT=0
    - command: /usr/sbin/update-initramfs -u

- name: Install EFI GRUB
  block:
  - shell: |
      parted /dev/sda -- set 1 legacy_boot on
      grub-install --removable --no-floppy --no-nvram --uefi-secure-boot --target=i386-efi
      grub-install --removable --no-floppy --no-nvram --uefi-secure-boot --target=x86_64-efi
      grub-install --removable --no-floppy --no-nvram --uefi-secure-boot --target=i386-pc /dev/sda
      update-initramfs -ckall
      update-grub
  become: yes

# systemd isn't available in debian's initramfs-tools, so we use dracut
- name: Read-only overlay
  block:
  - lineinfile:
      dest: /etc/dracut.conf.d/overlay.conf
      create: yes
      insertafter: EOF
      line: 'filesystems+=" overlay "'
  - lineinfile:
      dest: /etc/dracut.conf.d/udev.conf
      create: yes
      insertafter: EOF
      line: 'filesystems+=" ext4 "'
  - apt:
      install_recommends: no
      pkg:
      - dracut
  - lineinfile:
      dest: /etc/dracut.conf.d/10-debian.conf
      create: yes
      regexp: "hostonly=yes"
      line: "hostonly=no"
  - shell: dracut --regenerate-all --force
  become: yes

- name: install latest nodejs
  block:
    - apt_key: url=https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    - apt_repository:
        repo: 'deb http://deb.nodesource.com/node_16.x {{ ansible_distribution_release }} main'
        update_cache: yes
    - apt: name=nodejs
    - shell: |
        npm i -g yarn
        yarn config set --home enableTelemetry 0

- name: GPG config
  block:
  - file:
      path: "/home/{{ user }}/.gnupg"
      state: directory
      mode: "0700"
      recurse: yes
      owner: "{{ user }}"
      group: "{{ user }}"
  - lineinfile:
      dest: /home/{{ user }}/.gnupg/gpg-agent.conf
      state: present
      mode: "0600"
      owner: "{{ user }}"
      group: "{{ user }}"
      create: yes
      line: 'pinentry-program /usr/bin/pinentry-tty'
  - lineinfile:
      dest: /home/{{ user }}/.gnupg/gpg-agent.conf
      state: present
      mode: "0600"
      owner: "{{ user }}"
      group: "{{ user }}"
      create: yes
      line: 'allow-loopback-pinentry'

- name: Auto Mount SD Cards
  template:
    src: udev-sdcard-automount.rules
    dest: /etc/udev/rules.d/70-udev-sdcard-automount.rules

- name: Media Automount
  template:
    src: media-automount
    dest: /usr/local/bin/media-automount
    mode: "0755"

- name: Media Automount Service
  template:
    src: media-automount@.service
    dest: /etc/systemd/system/media-automount@.service
    mode: "0644"

- name: Enable DHCP if network device present
  block:
    - blockinfile:
        dest: /etc/systemd/network/dhcp.network
        state: present
        create: yes
        block: |
          [Match]
          Name=en*
          [Network]
          DHCP=ipv4

- name: Enable passwordless ssh for dev or airgap-to-airgap uses
  block:
    - lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
        line: 'PermitEmptyPasswords yes'
    - lineinfile:
        dest: /etc/pam.d/sshd
        state: absent
        line: '@include common-auth'
    - blockinfile:
        dest: /etc/pam.d/sshd
        state: present
        block: |
          auth [success=1 default=ignore] pam_unix.so nullok
          auth requisite pam_deny.so
          auth required pam_permit.so
